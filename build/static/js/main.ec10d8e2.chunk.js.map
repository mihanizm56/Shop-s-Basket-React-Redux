{"version":3,"sources":["components/Header/Items/Bignumber.js","components/Header/Items/FreeCall.js","components/Header/Items/Number.js","components/Header/Items/Star.js","components/Header/Items/Youtube.js","components/Header/Items/LiveStream.js","components/Header/index.js","components/index.js","serviceWorker.js","index.js","App.js"],"names":["Bignumber","react_default","a","createElement","className","FreeCall","Items_Number","StarIcon","styled","div","_templateObject","StarWrapper","_templateObject2","Star","YoutubeWrapper","Youtube_templateObject","YoutubeIcon","Youtube_templateObject2","Youtube","StreamWrapper","LiveStream_templateObject","StreamIcon","LiveStream_templateObject2","LiveStream","HeaderWrapper","Header_templateObject","HeaderNav","Header_templateObject2","NumberWrapper","_templateObject3","TubeWrapper","_templateObject4","Header","MainWrapper","components_templateObject","BasketPage","state","Component","Boolean","window","location","hostname","match","ReactDOM","render","components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sQAEeA,EAAA,kBAAMC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,sBCANC,EAAA,kBAAMJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,wJCENE,EAAA,WACb,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACE,EAAD,yYCLN,IAEME,EAAWC,IAAOC,IAAVC,IAFwB,kBAWhCC,EAAcH,IAAOC,IAAVG,KAQFC,EAAA,WACb,OACEZ,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAACI,EAAD,MACAN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,udCvBN,IAEMU,EAAiBN,IAAOC,IAAVM,KAQdC,EAAcR,IAAOC,IAAVQ,IAVqB,qBAmBvBC,EAAA,WACb,OACEjB,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,oeCvBN,IAEMe,EAAgBX,IAAOC,IAAVW,KAQbC,EAAab,IAAOC,IAAVa,IAVsB,oBAmBvBC,EAAA,WACb,OACEtB,EAAAC,EAAAC,cAACgB,EAAD,KACElB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,y0BClBN,IAAMoB,EAAgBhB,IAAOC,IAAVgB,KAQbC,EAAYlB,IAAOC,IAAVkB,KASTC,EAAgBpB,IAAOC,IAAVoB,KAQbC,EAActB,IAAOC,IAAVsB,IACN,KAOIC,EAAA,WACb,OACE/B,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAACuB,EAAD,KACEzB,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAACG,EAAD,OAEFL,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACoB,EAAD,kLC/CV,IAAMU,EAAczB,IAAOC,IAAVyB,KAyBFC,6MAjBbC,MAAQ,2EAGN,OACEnC,EAAAC,EAAAC,cAAC8B,EAAD,KACIhC,EAAAC,EAAAC,cAAC6B,EAAD,cANeK,mBCCLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECZNC,IAASC,OAAO3C,EAAAC,EAAAC,cCFD,WACb,OACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC0C,EAAD,QDDQ,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ec10d8e2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default () => <div className='big-number'>8 (800) 500-75-55</div>","import React from \"react\";\r\n\r\nexport default () => <div className='free-call'>Бесплатный звонок по России</div>","import React from \"react\";\r\nimport Bignumber from \"./Bignumber\";\r\nimport FreeCall from \"./FreeCall\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className='number'>\r\n      <Bignumber />\r\n      <FreeCall />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst icon = process.env.PUBLIC_URL + \"./img/star.png\";\r\n\r\nconst StarIcon = styled.div`\r\n  height: 30px;\r\n  width: 31px;\r\n  margin-right:5px;\r\n  border:1px solid red;\r\n  background: url(${icon}) no-repeat;\r\n  background-size: contain;\r\n`;\r\n\r\nconst StarWrapper = styled.div`\r\n  display: flex;\r\n  align-items:center;\r\n  width: 132px;\r\n  height:100%;\r\n  border: 1px solid red;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <StarWrapper>\r\n      <StarIcon />\r\n      <span className='header-text'>Звёздный блог</span>\r\n    </StarWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst icon = process.env.PUBLIC_URL + \"./img/YouTube.png\";\r\n\r\nconst YoutubeWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 226px;\r\n  height: 100%;\r\n  border: 1px solid green;\r\n`;\r\n\r\nconst YoutubeIcon = styled.div`\r\n  height: 22px;\r\n  width: 54px;\r\n  margin-right:5px;\r\n  border: 1px solid green;\r\n  background: url(${icon}) no-repeat;\r\n  background-size: contain;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <YoutubeWrapper>\r\n      <YoutubeIcon />\r\n      <span className=\"header-text\">Смотрите нас на YouTube</span>\r\n    </YoutubeWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst icon = process.env.PUBLIC_URL + \"./img/stream.png\";\r\n\r\nconst StreamWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 230px;\r\n  height: 100%;\r\n  border: 1px solid blue;\r\n`;\r\n\r\nconst StreamIcon = styled.div`\r\n  height: 22px;\r\n  width: 54px;\r\n  margin-right:5px;\r\n  border: 1px solid blue;\r\n  background: url(${icon}) no-repeat;\r\n  background-size: contain;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <StreamWrapper>\r\n      <StreamIcon />\r\n      <span className=\"header-text\">Смотрите нас на YouTube</span>\r\n    </StreamWrapper>\r\n  );\r\n};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Number from \"./Items/Number\";\r\nimport Star from \"./Items/Star\";\r\nimport Youtube from \"./Items/Youtube\";\r\nimport LiveStream from \"./Items/LiveStream\";\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 40px;\r\n  width: 100%;\r\n  background-color: #e4e4e4;\r\n`;\r\n\r\nconst HeaderNav = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height:100%;\r\n  width: 1170px;\r\n  border: 1px solid black;\r\n`\r\n\r\nconst NumberWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 525px;\r\n  height: 100%;\r\n  border: 1px solid green;\r\n`;\r\n\r\nconst TubeWrapper = styled.div`\r\n  width: ${1170 - 525}px;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <HeaderNav>\r\n        <NumberWrapper>\r\n          <Number />\r\n        </NumberWrapper>\r\n        <TubeWrapper>\r\n          <Star />\r\n          <Youtube />\r\n          <LiveStream />\r\n        </TubeWrapper>\r\n      </HeaderNav>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header/index\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MainWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:flex-start;\r\n  align-items:center;\r\n`;\r\n\r\nclass BasketPage extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <MainWrapper>\r\n          <Header/>\r\n        {/*\r\n        <UserWrapper />\r\n        <NavigationBlock />\r\n        <MainBlock />\r\n        <AdvertisingBlock />\r\n        <Footer /> */}\r\n      </MainWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasketPage;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport BasketPage from \"./components/index\";\nimport './App.css';\n\nexport default () => {\n  return (\n    <div className=\"App\">\n        <BasketPage />\n    </div>\n  );\n};\n"],"sourceRoot":""}